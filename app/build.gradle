plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.honeywell.assignment"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {


        local{
            debuggable true
            signingConfig signingConfigs.debug
            buildConfigField 'String', 'ENVIRONMENT', '"LOCAL"';
            buildConfigField 'String', 'API_URL', '"http://'+ InetAddress.getLocalHost().getCanonicalHostName() + ':8080/"';
        }
        tst{ // build types may not start with 'test'
            debuggable true
//            signingConfig signingConfigs.release
            buildConfigField 'String', 'ENVIRONMENT', '"TEST"';
            buildConfigField 'String', 'API_URL', '"https://my-service-test.mydomain/"';
        }
        stage{
            debuggable true
//            signingConfig signingConfigs.release
            buildConfigField 'String', 'ENVIRONMENT', '"STAGE"';
            buildConfigField 'String', 'API_URL', '"https://my-service-stage.mydomain/"';
        }
        release {
            debuggable false
            minifyEnabled false
            //signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'ENVIRONMENT', '"PROD"';
            buildConfigField 'String', 'API_URL', '"https://my-service.mydomain/"';
        }

        task addCurrentDate() {
            android.applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def date = new Date().format("dd-MM-yyyy")
                    def fileName = variant.name + "_" + date + ".apk"
                    output.outputFileName = fileName
                }
            }
        }


       /* release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }*/
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {

    def kotlin_core_version="1.3.2"
    def kotlin_coroutines_version="1.3.9"
    def app_compat_version="1.2.0"
    def material_version="1.2.1"
    def constrain_layout_version="2.0.4"
    def retrofit_version="2.9.0"
    def okhttp_version="4.9.0"
    def lifecycle_version = "2.2.0"
    def paging_version = "3.0.0-alpha12"
    def gson_version = "2.8.6"


    implementation "androidx.core:core-ktx:$kotlin_core_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constrain_layout_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "com.google.code.gson:gson:$gson_version"


    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}